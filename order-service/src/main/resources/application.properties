spring.datasource.url = jdbc:mysql://localhost:3306/order-service
spring.datasource.username = root
spring.datasource.password = root
spring.jpa.hibernate.ddl-auto = update
server.port = 8081
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka
spring.application.name = order-service


management.health.circuitbreakers.enabled= true
management.endpoints.web.exposure.include=*
management.endpoints.health.show-details=always

##Resislience4j properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=10
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true

##Resislience4j timeout properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

##Resislience4j retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

## Zipkin configuration
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

##Kafka configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.group-id= notificationId
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.ecommerce.orderservice.event.OrderPlacedEvent
